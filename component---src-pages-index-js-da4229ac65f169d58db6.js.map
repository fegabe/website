{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.array.flat-map.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_flatten-into-array.js"],"names":["$export","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","P","flatMap","callbackfn","sourceLen","A","O","this","length","arguments","tempObject","THREE","tempColor","colors","Array","fill","map","niceColors","Math","floor","random","Boxes","useState","hovered","set","colorArray","useMemo","Float32Array","from","_","i","toArray","ref","useRef","previous","useEffect","current","useFrame","state","time","clock","getElapsedTime","rotation","x","sin","y","z","id","position","geometry","attributes","color","needsUpdate","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","args","onPointerMove","e","instanceId","onPointerOut","undefined","attach","attachObject","vertexColors","isBrowser","window","gl","antialias","alpha","camera","near","far","onCreated","setClearColor","intensity","isArray","isObject","ctx","IS_CONCAT_SPREADABLE","module","exports","target","original","source","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn","TypeError"],"mappings":"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","file":"component---src-pages-index-js-da4229ac65f169d58db6.js","sourcesContent":["'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","import * as THREE from \"three\"\r\nimport React, { useState, useRef, useEffect, useMemo } from \"react\"\r\nimport { Canvas, useFrame } from \"react-three-fiber\"\r\nimport niceColors from 'nice-color-palettes'\r\nimport Effects from './Effects'\r\nimport \"./style.css\"\r\n\r\nconst tempObject = new THREE.Object3D()\r\nconst tempColor = new THREE.Color()\r\nconst colors = new Array(1000).fill().map(() => niceColors[17][Math.floor(Math.random() * 5)])\r\n\r\nconst Boxes = () => {\r\n  const [hovered, set] = useState()\r\n  const colorArray = useMemo(() => Float32Array.from(new Array(1000).fill().flatMap((_, i) => tempColor.set(colors[i]).toArray())), [])\r\n\r\n  const ref = useRef()\r\n  const previous = useRef()\r\n  useEffect(() => void (previous.current = hovered), [hovered])\r\n\r\n  useFrame(state => {\r\n    const time = state.clock.getElapsedTime()\r\n    ref.current.rotation.x = Math.sin(time / 4)\r\n    ref.current.rotation.y = Math.sin(time / 2)\r\n    let i = 0\r\n    for (let x = 0; x < 10; x++)\r\n      for (let y = 0; y < 10; y++)\r\n        for (let z = 0; z < 10; z++) {\r\n          const id = i++\r\n          tempObject.position.set(5 - x, 5 - y, 5 - z)\r\n          tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time)\r\n          tempObject.rotation.z = tempObject.rotation.y * 2\r\n          if (hovered !== previous.current) {\r\n            tempColor.set(id === hovered ? 'white' : colors[id]).toArray(colorArray, id * 3)\r\n            ref.current.geometry.attributes.color.needsUpdate = true\r\n          }\r\n          const scale = id === hovered ? 2 : 1\r\n          tempObject.scale.set(scale, scale, scale)\r\n          tempObject.updateMatrix()\r\n          ref.current.setMatrixAt(id, tempObject.matrix)\r\n        }\r\n    ref.current.instanceMatrix.needsUpdate = true\r\n  })\r\n\r\n  return (\r\n    <instancedMesh ref={ref} args={[null, null, 1000]} onPointerMove={e => set(e.instanceId)} onPointerOut={e => set(undefined)}>\r\n      <boxBufferGeometry attach=\"geometry\" args={[0.7, 0.7, 0.7]}>\r\n        <instancedBufferAttribute attachObject={['attributes', 'color']} args={[colorArray, 3]} />\r\n      </boxBufferGeometry>\r\n      <meshPhongMaterial attach=\"material\" vertexColors={THREE.VertexColors} />\r\n    </instancedMesh>\r\n  )\r\n}\r\n\r\nexport default () => {\r\n  const isBrowser = typeof window !== \"undefined\"\r\n\r\n  return (\r\n    <>\r\n      <h1>Hello everyone!</h1>\r\n      {isBrowser && (\r\n        <Canvas\r\n          gl={{ antialias: false, alpha: false }}\r\n          camera={{ position: [0, 0, 15], near: 5, far: 20 }}\r\n          onCreated={({ gl }) => gl.setClearColor('lightpink')}>\r\n          <ambientLight />\r\n          <pointLight position={[150, 150, 150]} intensity={0.55} />\r\n          <Boxes />\r\n          <Effects />\r\n        </Canvas>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n"],"sourceRoot":""}